# Generated by Django 4.0.5 on 2022-09-27 15:51

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import hotel.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cleaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(verbose_name='Cleaning Date')),
            ],
        ),
        migrations.CreateModel(
            name='FileUploads',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='', validators=[hotel.models.FileValidator(content_types=('image/jpeg',), max_size=102400)])),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('number', models.CharField(max_length=4, primary_key=True, serialize=False, unique=True, verbose_name='Room Number')),
                ('type', models.CharField(choices=[('4', 'luxe'), ('3', '2 beds'), ('2', '1 kingsize bed'), ('1', '1 bed')], max_length=1, verbose_name='Room Type')),
                ('price', models.IntegerField(verbose_name='Price')),
                ('floor', models.IntegerField(verbose_name='Floor Number')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Staff Full Name')),
                ('phone', models.CharField(default='00000000000000', max_length=14, verbose_name='Staff Phone Number')),
            ],
        ),
        migrations.CreateModel(
            name='RoomPicture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(upload_to='')),
                ('file_name', models.CharField(max_length=255)),
                ('file_size', models.FloatField()),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hotel.room')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='cleaners',
            field=models.ManyToManyField(through='hotel.Cleaning', to='hotel.staff'),
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('passport_number', models.CharField(max_length=10, unique=True, verbose_name='Passport Number')),
                ('name', models.CharField(max_length=100, verbose_name='Guest Name')),
                ('surname', models.CharField(max_length=100, verbose_name='Guest Surname')),
                ('middlename', models.CharField(max_length=100, verbose_name='Guest Middlename')),
                ('from_location', models.CharField(max_length=100, verbose_name='Guest Location')),
                ('check_in_date', models.DateField(default=django.utils.timezone.now, verbose_name='Guest Check-in Date')),
                ('check_out_date', models.DateField(default=django.utils.timezone.now, verbose_name='Guest Check-out Date')),
                ('prev_check_out_date', models.DateField(default=django.utils.timezone.now, verbose_name='Previous Guest Check-out Date')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='guests', to='hotel.room')),
            ],
        ),
        migrations.AddField(
            model_name='cleaning',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cleaning', to='hotel.room'),
        ),
        migrations.AddField(
            model_name='cleaning',
            name='staff',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cleaning', to='hotel.staff'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=14)),
                ('full_name', models.CharField(max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
